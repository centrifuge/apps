name: Onboarding API
on:
  push:
    branches:
      - main
    tags:
      - "release*"
    paths:
      - 'onboarding-api/**'
      - '.github/workflows/onboarding-api.yml'
  pull_request:
    paths:
      - 'onboarding-api/**'
      - '.github/workflows/onboarding-api.yml'
  workflow_call:
    inputs:
      deploy_env:
        type: string
        required: true
env:
# If you change these change also in prod-deploy.yml
  app_name: onboarding-api
  function_handler: onboarding
  
concurrency:
  group:  'onboarding-api-${{ inputs.deploy_env || github.event.inputs.deploy_env }} @${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: false    
 
jobs:
  build:
    if: ${{ inputs.deploy_env != 'production' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: onboarding-api
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: prepare env logic
        id: prepare
        uses: ./.github/actions/prepare-deploy
        with:
          app_base_name: ${{ env.app_name }}
          deploy_to: ${{ inputs.deploy_env }}

      - name: Set function env vars
        id: set_env
        uses: ./.github/actions/fetch-function-vars
        with:
          vars_file: ${{ env.app_name }}/env-vars/${{ steps.prepare.outputs.env_name }}.env 
          

      - name: Set function env secrets
        id: set_secrets
        uses: ./.github/actions/fetch-function-secrets
        with:       
          app_name: ${{ env.app_name }}
          deploy_env:  ${{ steps.prepare.outputs.gh_env }}
                    
      - name: build function
        uses: ./.github/actions/build-function
        with:
          artifact_name: ${{ env.app_name }}

      - name: Archive staging artifacts
        id: archive_staging
        if: inputs.deploy_env == 'staging' && github.event_name == 'release'
        uses: ./.github/actions/archive-release
        with:
          name: ${{ env.app_name }}
          path: ./${{ env.app_name }}/dist
          
    outputs:
      function_name: ${{ steps.prepare.outputs.function_name }}
      gh_env: ${{ steps.prepare.outputs.gh_env }}
      front_url: ${{ steps.prepare.outputs.gh_env }}
      function_secrets: ${{ steps.set_secrets.outputs.function_secrets }}
      function_vars: ${{ steps.set_env.outputs.function_vars }}


  deployment:
      needs: build
      runs-on: ubuntu-latest
      environment: ${{ needs.build.outputs.gh_env }}
      # Note: environment = production requires additional approvals, it only happen on manual trigger to the main branch
      permissions:
        contents: 'read'
        id-token: 'write'
      steps:
        - name: Checkout
          uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
          with:
            path: apps  

        - name: Deploy Gfunction
          id: functionsdeploy
          uses: ./apps/.github/actions/deploy-gfunction
          with:
            function_name: ${{ needs.build.outputs.function_name }}
            artifact_name: ${{ env.app_name }}
            function_folder: apps/${{ env.app_name }}
            GWIP: ${{ secrets.GWIP }}
            GSA: ${{ secrets.GSA }}
            gcloud_region: ${{ vars.GCLOUD_REGION }}
            gcloud_env: ${{ needs.build.outputs.gh_env }}
            target: ${{ env.function_handler }}
            service_account: "${{ vars.ONBOARDING_FUNCT_SA }}"
            