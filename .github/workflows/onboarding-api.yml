name: 'onboarding-api'
on:
  push:
    branches:
      - main
    # paths:
    #   - 'onboarding-api/**'
  pull_request:
    # paths:
    #   - 'onboarding-api/**'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: onboarding-api
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 #@v3
        with:
          node-version: 16
          cache: yarn
          # cache-dependency-path: onboarding-api/yarn.lock
          
      - name: YARN install
        run: yarn install

      - name: Lint check
        run: yarn lint

      - name: Build function
        run: yarn build

      - name: Archive functions artifacts
        uses: actions/upload-artifact@v3
        with:
          name: onboarding-api
          retention-days: 1
          path: onboarding-api/dist

  deployment:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'preview' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      app_name: onboarding-api-${{ github.head_ref || github.ref_name }}
      region: europe-central2
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: retrieve artifacts
        uses: actions/download-artifact@v3
        with:
          name: onboarding-api
      
      - name: list artifacts
        run: ls -R

      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'      

      - name: Deploy to google functions
        id: gclouddeploy
        uses: google-github-actions/deploy-cloud-functions@14509ca55199d9348161571e36c48e44f855030d #@v1
        with:
          name: '${{ env.app_name }}'
          runtime: 'nodejs16'
          region: '${{ env.region }}'
          source_dir: './' # downlaod artifacts sets the current directory as the one in the artifact.with.path
          # project_id: '${{ env.gcloud_project }}'
          # allow_unauthenticated: true
          entry_point: 'onboarding'

      - name: Gcloud functions URL
        run: echo "::notice::Function URL\:\ ${{ steps.gclouddeploy.outputs.url }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1 
      - name: make function public
        run: |
          gcloud functions add-iam-policy-binding ${{env.app_name}} \
          --member="allUsers" --role="roles/cloudfunctions.invoker" \
          --region=${{ env.region }}

      - name: Delete function when PR closed
        if: github.event.action == 'closed' 
        run: gcloud functions delete ${{env.app_name}} --region=${{ env.region }}

      # ToDo: 
      # - create a redirect rule in Cloudflare using CF_API_KEY
      #   to proxy /onboard-api to the Gcloud URL transparently

