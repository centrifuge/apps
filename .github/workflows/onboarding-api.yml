name: Onboarding API
on:
  release:
    types:
      - "released"
  push:
    branches:
      - main
    tags:
      - "release*"
    paths:
      - 'onboarding-api/**'
      - '.github/workflows/onboarding-api.yml'
  pull_request:
    paths:
      - 'onboarding-api/**'
      - '.github/workflows/onboarding-api.yml'
  workflow_call:
    inputs:
      deploy_demo:
        description: "Deploy to demo?"
        required: true
        type: boolean
        default: false
      deploy_prod:
        description: "Deploy to prod?"
        required: true
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: onboarding-api-${{ github.ref }}
      cancel-in-progress: true   
    defaults:
      run:
        working-directory: onboarding-api
    env:
      app_name: onboarding-api
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: prepare env logic
        id: prepare
        uses: ./.github/actions/prepare-deploy
        with:
          app_base_name: ${{ env.app_name }}
          deploy_to: ${{ inputs.deploy_env }}

      - name: build function
        uses: ./.github/actions/build-function
        with:
          artifact_name: ${{ env.app_name }}

    outputs:
      front_url: ${{ steps.prepare.outputs.front_url }}
      gh_env: ${{ steps.prepare.outputs.gh_env }}

  deployment:
      needs: build
      concurrency:
        group: onboarding-api-${{ github.ref }}
        cancel-in-progress: true    
      runs-on: ubuntu-latest
      environment: ${{ needs.build.gh_env }}
      # Note: environment = production requires additional approvals, it only happen on manual trigger to the main branch
      permissions:
        contents: 'read'
        id-token: 'write'
      env:
        region: europe-central2
        app_name: onboarding-api
      steps:
        - name: Deploy Gfunction
          id: functionsdeploy
          uses: ./.github/actions/deploy-gfunction
          with:
            function_name: env.app_name 
            GWIP: ${{ secrets.GWIP }}
            GSA: ${{ secrets.GSA }}
            target: "onboarding"
            # function_secrets: |
            #   PINATA_API_KEY=${{ secrets.GCLOUDPINATAKEY }}
            #   PINATA_SECRET_API_KEY=${{ secrets.GCLOUDPINATASECRET }}
