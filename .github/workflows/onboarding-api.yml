name: Onboarding API
on:
  push:
    branches:
      - main
    tags:
      - "release*"
    paths:
      - 'onboarding-api/**'
      - '.github/workflows/onboarding-api.yml'
  pull_request:
    paths:
      - 'onboarding-api/**'
      - '.github/workflows/onboarding-api.yml'
  workflow_call:
    inputs:
      deploy_env:
        type: string
        required: true
env:
  app_name: onboarding-api
  
jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ inputs.deploy_env }}onboarding-api-${{ github.ref }}
      cancel-in-progress: true   
    defaults:
      run:
        working-directory: onboarding-api

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: prepare env logic
        id: prepare
        uses: ./.github/actions/prepare-deploy
        with:
          app_base_name: ${{ env.app_name }}
          deploy_to: ${{ inputs.deploy_env }}

      - name: build function
        uses: ./.github/actions/build-function
        with:
          artifact_name: ${{ env.app_name }}

      - name: set secrets for Gfunction deploy
        id: set_secrets
        run: |
          if ${{ steps.prepare.outputs.gh_env == 'production'}}; then
            echo "gcloud_secrets=$(cat env-vars/prod.secrets)" >> $GIHTUB_OUTPUT
          else
            echo "gcloud_secrets=$(cat env-vars/dev.secrets)" >> $GIHTUB_OUTPUT
          fi
      - name: set env vars for Gfunction deploy
        shell: bash
        id: set_env
        run: |
          VARS_COMMA=cat env-vars/${{ steps.prepare.outputs.env_name }}.env | paste -s -d, -
          echo $VARS_COMMA
          echo "gcloud_env=$VARS_COMMA" >> $GIHTUB_OUTPUT

    outputs:
      app_name: ${{ steps.prepare.outputs.app_name }}
      gh_env: ${{ steps.prepare.outputs.gh_env }}
      front_url: ${{ steps.prepare.outputs.gh_env }}
      function_secrets: ${{ steps.set_secrets.outputs.gh_env }}
      function_env: ${{ steps.set_env.outputs.gh_env }}


  deployment:
      needs: build
      concurrency:
        group: ${{ inputs.deploy_env }}onboarding-api-${{ github.ref }}
        cancel-in-progress: true    
      runs-on: ubuntu-latest
      environment: ${{ needs.build.outputs.gh_env }}
      # Note: environment = production requires additional approvals, it only happen on manual trigger to the main branch
      permissions:
        contents: 'read'
        id-token: 'write'
      steps:
        - name: Checkout
          uses: Bhacaz/checkout-files@v2
          with:
            files: .github/actions/deploy-gfunction/action.yml
            branch: ${{ github.head_ref || github.ref_name }} 
            
        - run: echo "Using GH env ->  ${{ needs.build.outputs.gh_env }}"

        - name: Deploy Gfunction
          id: functionsdeploy
          uses: ./.github/actions/deploy-gfunction
          with:
            function_name: ${{ needs.build.outputs.app_name }}
            artifact_name: ${{ env.app_name }}
            GWIP: ${{ secrets.GWIP }}
            GSA: ${{ secrets.GSA }}
            gcloud_region: ${{ env.GCLOUD_REGION }}
            target: onboarding
            function_secrets: |
                ${{ needs.build.outputs.function_secrets }}
            function_env: "${{ needs.build.outputs.function_env }}"
            service_account: "${{ vars.ONBOARDING_FUNCT_SA }}"