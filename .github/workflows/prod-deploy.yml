name: Promote staging to PROD
on:
  release:
    types:
      - released     
  workflow_dispatch:

jobs:
  sync_staging_prod:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          path: apps    

      - name: prepare env logic
        id: prepare
        uses: ./apps/.github/actions/prepare-deploy
        with:
          app_base_name: app
          deploy_to: 'production'

      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@62d4898025f6041e16b1068643bfc5a696863587 # @v1 

      - name: Sync webpack from staging
        run: gsutil -m rsync -d -r gs://app-staging.centrifuge.io gs://${{ steps.prepare.outputs.front_url }}
  
  retrieve_function_assets:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
    steps:  
      - uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'centrifuge/apps'
          version: 'tags/${{ github.ref_name }}'
          file: '*.zip'
          # target: 'subdir/${{ matrix.artifact_name }}.zip'
          # token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: "debug: list workspace"
        run: ls -la

      - name: Unzip release files
        run: |
          unzip pinning-api.zip -d pinning-api 1> /dev/null
          unzip onboarding-api.zip -d onboarding-api 1> /dev/null

      - name: list artifact files
        run: |
          ls -la pinning-api/
          ls -la onboarding-api/

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce #@3.1.2
        with: 
          name: onboading-api
          path: ./onboading-api
          if-no-files-found: error 
          
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce #@3.1.2
        with: 
          name: pinning-api
          path: ./pinning-api
          if-no-files-found: error 

  deploy_pinning:
    needs: retrieve_function_assets
    runs-on: ubuntu-latest
    environment: ${{ needs.build.outputs.gh_env }}
    # Note: environment = production requires additional approvals, it only happen on manual trigger to the main branch
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      app_name: pinning-api
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          path: apps  

      - name: Deploy Gfunction
        id: functionsdeploy
        uses: ./apps/.github/actions/deploy-gfunction
        with:
          app_name: ${{ env.app_name }}
          GWIP: ${{ secrets.GWIP }}
          GSA: ${{ secrets.GSA }}
          target: ${{ env.function_handler }}
          gcloud_region: ${{ vars.GCLOUD_REGION }}
          service_account: "${{ vars.PINNING_API_FUNCT_SA }}"
          deploy_env: production

  deploy_onboarding:
    needs: retrieve_function_assets
    runs-on: ubuntu-latest
    environment: ${{ needs.build.outputs.gh_env }}
    # Note: environment = production requires additional approvals, it only happen on manual trigger to the main branch
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      app_name: onboarding-api
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          path: apps  

      - name: Deploy Gfunction
        id: functionsdeploy
        uses: ./apps/.github/actions/deploy-gfunction
        with:
          app_name: ${{ env.app_name }}
          GWIP: ${{ secrets.GWIP }}
          GSA: ${{ secrets.GSA }}
          target: ${{ env.function_handler }}
          service_account: "${{ vars.ONBOARDING_FUNCT_SA }}"
          gcloud_region: ${{ vars.GCLOUD_REGION }}
          deploy_env: production