name: Upload site to GCS
on:
  workflow_call:
    inputs:
      env_url:
        type: string
        description: "url will be used for bucket name"
        required: true
      artifact_name:
        type: string
        default: 'web-package'
        required: true
        description: "Path where the artifact is uploaded to"
      gh_env:
        type: string
        required: true
        description: environment (must exist in your repository)
jobs:

  deploy-gcs-website:
    concurrency:
      group: ${{ inputs.artifact_name }}-${{ github.ref }}
      cancel-in-progress: true    
    runs-on: ubuntu-latest
    environment: ${{inputs.gh_env}}
    steps:
      - name: download webpack
        id: download
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # @v3.0.2
        with:
          name: ${{ inputs.artifact_name }}
          path: webpack
      ## Every module from here on could potentially expose the Gcloud Auth Token
      ## Do not add untrusted code with `uses`
      ## Ideally run only google-github-actions code with commit SHA at the end from here on
      ## or `run` commands that we write.

      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'
      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1' 

      - name: try to create bucket
        id: create_bucket
        continue-on-error: true
        run: |
          gsutil mb gs://${{ inputs.env_url }}
          gsutil iam ch allUsers:objectViewer gs://${{ inputs.env_url }}
          gsutil web set -m index.html -e 404.html gs://${{ inputs.env_url }}

      - name: push to bucket
        id: push
        run: gsutil -m rsync -d -c -r ${{steps.download.outputs.download-path}} gs://${{ inputs.env_url }}
  
  comment_pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: deploy-gcs-website
    steps:
    # This step is separated to avoid using it while having access to Gcloud Auth credentials
    # saved in GH environments
      - name: PR comment with preview URL
        uses: thollander/actions-comment-pull-request@v2
        # if: github.event_name == 'pull_request' && steps.push.outcome == 'success'
        with:
          message: |
            Deployed webiste in Google Cloud
            URL: http://${{ inputs.env_url }}
            Commit #: ${{ github.event.pull_request.head.sha }}