name: Centrifuge App
on:
  push:
    branches:
      - main
    tags:
      - "rc*"
    paths:
      - 'centrifuge-app/**'
      - '.github/workflows/centrifuge-app.yml'
  pull_request:
    paths:
      - 'centrifuge-app/**'
      - '.github/workflows/centrifuge-app.yml'
  workflow_call:
    inputs:
      deploy_env:
        type: string
        required: true
jobs:  
  
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: cent-app-${{ github.ref }}
      cancel-in-progress: true   
    defaults:
      run:
        working-directory: centrifuge-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: prepare env logic
        id: prepare
        uses: ./.github/actions/prepare-deploy
        with:
          app_base_name: app
          deploy_to: ${{ inputs.deploy_env }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Install Dependencies
        # env:
        #   NODE_ENV: production      
        run: yarn install # --immutable
      - name: Lint
        run: yarn lint
      - name: Build centrifuge-app
        working-directory: centrifuge-app
        shell: bash
        # env:
        #   NODE_ENV: production        
        run: |
          yarn build:fabric 
          yarn build:centjs 
          cat .env-config/.env.${{ steps.prepare.outputs.env_name }}
          yarn build:app --mode ${{ steps.prepare.outputs.env_name }}
      
      - uses: actions/upload-artifact@v3
        with: 
          name: webpack
          path: ./centrifuge-app/build
          if-no-files-found: error
    outputs:
      front_url: ${{ steps.prepare.outputs.front_url }}
      gh_env: ${{ steps.prepare.outputs.gh_env }}
           

  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'  
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ needs.build.outputs.gh_env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
            
      - name: deploy to GCS
        id: gcsdeploy
        uses: ./.github/actions/deploy-gcs
        with:
          artifact_name: cent-app 
          bucket_url: ${{ needs.build.front_url }}
          GWIP: ${{ secrets.GWIP }}
          GSA: ${{ secrets.GSA }}
    outputs:
      bucket_url: ${{ needs.build.front_url }}
      gh_env: ${{ needs.build.outputs.gh_env }}

  notify:
    needs: deploy
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: PR comment with preview URL
        uses: thollander/actions-comment-pull-request@v2
        env:
          pull_sha: ${{ github.event.pull_request.head.sha }}
        with:
          message: |
            Deployed webiste in Google Cloud
            URL: http://${{ needs.deploy.outputs.bucket_url }}
            Commit #: ${{ env.pull_sha }}   
      
            
      

