name: Pinning API
on:
  push:
    branches:
      - main
    tags:
      - "rc*"
    paths:
      - 'pinning-api/**'
      - '.github/workflows/pinning-api.yml'
  pull_request:
    paths:
      - 'pinning-api/**'
      - '.github/workflows/pinning-api.yml'
  workflow_call:
    inputs:
      deploy_env:
        type: string
        required: true
env:
  app_name: pinning-api
concurrency:
  group: pinning-api-${{ github.event.inputs.deploy_env || github.ref }}
  cancel-in-progress: true    
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pinning-api

    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: prepare env logic
        id: prepare
        uses: ./.github/actions/prepare-deploy
        with:
          app_base_name: ${{ env.app_name }}
          deploy_to: ${{ inputs.deploy_env }}

      # Uncomment if var files are added to pinning
      # - name: Function env secrets
      #   id: set_env
      #   uses: ./.github/actions/fetch-function-secrets
      #   with:       
      #     vars_file: ${{ env.app_name }}/env-vars/${{ steps.prepare.outputs.env_name }}.env  
          
      - name: Function env secrets
        id: set_secrets
        uses: ./.github/actions/fetch-function-secrets
        with:
          app_name: ${{ env.app_name }}   
          deploy_env:  ${{ steps.prepare.outputs.gh_env }}
          
      - name: build function
        uses: ./.github/actions/build-function
        with:
          artifact_name: ${{ env.app_name }}

    outputs:
      app_name: ${{ steps.prepare.outputs.app_name }}
      gh_env: ${{ steps.prepare.outputs.gh_env }}
      function_secrets: ${{ steps.set_secrets.outputs.function_secrets }}
      function_vars: ${{ steps.set_env.outputs.function_vars }}

  deployment:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ needs.build.outputs.gh_env }}
    # Note: environment = production requires additional approvals, it only happen on manual trigger to the main branch
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          path: apps 
          
      - run: echo "${{ needs.build.outputs.gcloud_secrets }}"

      - name: Deploy Gfunction
        id: functionsdeploy
        uses: ./apps/.github/actions/deploy-gfunction
        with:
          function_name: ${{ needs.build.outputs.app_name }}
          artifact_name: ${{ env.app_name }}
          GWIP: ${{ secrets.GWIP }}
          GSA: ${{ secrets.GSA }}
          gcloud_region: ${{ env.GCLOUD_REGION }}
          target: pinningApi
          function_secrets: |
            ${{ needs.build.outputs.function_secrets }}
          service_account: "${{ vars.PINNING_API_FUNCT_SA }}"

