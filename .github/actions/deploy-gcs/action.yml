name: Upload static web to GCloud bucket
description: 'deploy front-end in google cloud buckets'
inputs:
  bucket_url:
    description: Name of bucket ending in k-f.dev
    required: true
  GWIP:
    description: Google Workflow Identity provider
    required: true
  GSA:
    description: Google Service Account
    required: true
  artifact_name:
    description: Name of artifact from GH upload
    required: true

runs:
  using: composite
  steps:
    - name: download webpack
      id: download
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # @v4.1.8
      with:
        name: ${{ inputs.artifact_name }}
        path: webpack

    ## Every module from here on could potentially expose the Gcloud Auth Token
    ## Do not add untrusted code with `uses`
    ## Ideally run only google-github-actions code with commit SHA at the end from here on
    ## or `run` commands that we write.

    - name: Auth gcloud
      id: gauth
      uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f # v2.1.7
      env:
        GSA: ${{ inputs.GSA }}
        GWIP: ${{ inputs.GWIP }}
      with:
        workload_identity_provider: ${{ env.GWIP }}
        service_account: ${{ env.GSA }}

    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: google-github-actions/auth@6189d56e4096ee891640bb02ac264be376592d6a # v2.1.2

    - name: Create bucket
      shell: sh
      id: create_bucket
      run: |
        if ! gsutil ls gs://${{ inputs.bucket_url }} 1> /dev/null; then
          gsutil mb gs://${{ inputs.bucket_url }}
          echo "Setup bucket settings to serve the site"
          gsutil iam ch allUsers:objectViewer gs://${{ inputs.bucket_url }}
          gsutil web set -m index.html -e index.html gs://${{ inputs.bucket_url }}            
        else
          echo "Bucket ${{ inputs.bucket_url }} found! No need to create it"
        fi
    - name: push to bucket
      shell: sh
      id: push
      run: gsutil -m rsync -d -r ${{steps.download.outputs.download-path}} gs://${{ inputs.bucket_url }}

    - name: set CORS
      shell: sh
      id: cors
      if: "${{ inputs.cors_config != ''}}"
      run: gsutil cors set ${{ inputs.cors_config }} gs://${{ inputs.bucket_url }}

    - shell: sh
      run: echo "::notice title=front_URL::${{ inputs.bucket_url  }}"
