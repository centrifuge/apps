name: 'Prepare env strategy'
description: 'Determine functions name, URL and GHA environment secrets'

inputs:
  # git_ref:
  #   description: "branch, tag, or commit #"
  #   required: true
  #   type: string
  app_base_name:
    description: "app name you're deploying"
    required: true
  set_env:
    description: "(Optional) Manual trigger to deploy: demo or prod"
    required: false
outputs:
  app_name: 
    description: "App name with environment appended"
    value: ${{ steps.naming.outputs.app_name}}
  front_url: 
    description: "Full URL for your front-end piece"
    value: ${{ steps.naming.outputs.front_url }}
  gh_env:  
    description: "Github actions environment to use for deployment"
    value: ${{ steps.setenv.outputs.gh_env }} 

runs:
  using: composite
  steps:
    - id: setenv
      shell: bash
      # Set Alatair and Centrifuge to deploy in the prod Gcloud account
      # both will require approval to use the GCE prod secrets
      run: |
        echo "Discover GH environment for deploy:"
        if  ${{ inputs.set_env == 'production' }}; then
          # ALTAIR & PROD
          echo "gh_env=production" >> $GITHUB_OUTPUT
        else
          # Other ENV
          echo "gh_env=preview" >> $GITHUB_OUTPUT
        fi 

    - name: Set artifact names based on environment
      id: naming
      shell: bash
      # Follow deployment strategy from 
      # https://centrifuge.hackmd.io/MFsnRldyQSa4cadx11OtVg?both#Environments
      run: |
        echo "Set app name based on env strategy"
        if  ${{ inputs.set_env == 'production' }}; then
         # Gcloud prod account
          if  ${{ github.ref == 'refs/tags/release*' }}; then
            # ALTAIR
            echo "::warning title=Deploying to prod::Replacing Altair prod function with tag ${{ github.ref }}"
            echo "app_name=${{ inputs.app_base_name }}-altair" >> $GITHUB_OUTPUT
            echo "front_url=${{ inputs.app_base_name }}-altair.k-f.co" >> $GITHUB_OUTPUT
          else
            # PROD
            echo "app_name=${{ inputs.app_base_name }}" >> $GITHUB_OUTPUT
            echo "front_url=${{ inputs.app_base_name }}.k-f.co" >> $GITHUB_OUTPUT
          fi
        elif  ${{ github.ref == 'refs/tags/rc*' }}; then
        # Gcloud dev account
          # CATALYST
          echo "app_name=${{ inputs.app_base_name }}-catalyst" >> $GITHUB_OUTPUT
          echo "front_url=${{ inputs.app_base_name }}-catalyst.k-f.co" >> $GITHUB_OUTPUT
        elif  ${{ github.ref == 'refs/heads/main' }}; then
          # DEV
          echo "app_name=${{ inputs.app_base_name }}-dev" >> $GITHUB_OUTPUT
          echo "front_url=${{ inputs.app_base_name }}-dev.k-f.co" >> $GITHUB_OUTPUT
        elif ${{ inputs.deploy_env == 'demo' }}; then
          # DEMO
          echo "app_name=${{ inputs.app_base_name }}-demo" >> $GITHUB_OUTPUT
          echo "front_url=${{ inputs.app_base_name }}-demo.k-f.co" >> $GITHUB_OUTPUT
        else
          # PR
          echo "app_name=${{ inputs.app_base_name }}-pr${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "front_url=${{ inputs.app_base_name }}-pr${{ github.event.number }}.k-f.co" >> $GITHUB_OUTPUT
        fi

    - name: debug outputs
      shell: bash
      run: |
        echo "URL ${{ steps.naming.outputs.front_url }}"
        echo "App name: ${{ steps.naming.outputs.app_name }}"
        
